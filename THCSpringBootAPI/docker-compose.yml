version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  mongodb-container:
    container_name: mongodb-container
    image: mongo:latest
    volumes:
      - ./database:/mongo/data
    ports:
      - "27017:27017"
  mysqldbContainer:
    container_name: mysqldbContainer
    image: mysql:latest
    volumes:
      - ./database:/mysql/data
    environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: thcmysqldb
        MYSQL_USER: thcuser
        MYSQL_PASSWORD: thcsql1234
    ports:
      - "3306:3306"
  thc-spring-boot-container:
    container_name: thc-spring-boot-container
    build:
      context: "./"
      dockerfile: "Dockerfile"
    image: sushantcode/thc-spring-boot-api:latest
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    environment:
      # kafka
      - spring_kafka_bootstrap-servers=broker:29092
      # mongodb setup
      - spring_data_mongodb_host=mongodb-container
      # MySql setup
      - spring_datasource_url=jdbc:mysql://mysqldbContainer:3306/thcmysqldb?autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
    ports:
      - "8080:8080"
    links:
      - broker
      - mongodb-container
      - mysqldbContainer
    depends_on:
      - mongodb-container
      - mysqldbContainer
      - broker